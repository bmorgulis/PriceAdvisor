plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id "io.spring.dependency-management" version "1.1.6"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.htmlunit:htmlunit:4.4.0'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.mysql:mysql-connector-j:8.2.0'
    implementation 'org.springframework.security:spring-security-core:6.3.2'
    implementation 'org.springframework.security:spring-security-crypto'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.2.RELEASE'
    implementation 'software.amazon.awssdk:sns:2.20.10'
    implementation 'software.amazon.awssdk:auth:2.20.10'
    implementation 'org.jsoup:jsoup:1.15.3'
    implementation 'software.amazon.awssdk:rds:2.20.10'




    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:3.2.0"
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.example.priceadvisor.Application' // Replace with your main class
        )
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

test {
    useJUnitPlatform()
}

configurations.implementation {
    exclude group: 'commons-logging', module: 'commons-logging'
}